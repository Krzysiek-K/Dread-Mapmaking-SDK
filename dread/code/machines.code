


actor Door 0 {


	//	Line action										V	V2
	//		
	//		 1		Default door						0	0
	//		 2		Blue door							0	1
	//		 3		Yellow door							0	2
	//		 4		Red door							0	3
	//		 5		Door stay open						1	0
	//		 6		Blue door stay open					1	1
	//		 7		Yellow door stay open				1	2
	//		 8		Red door stay open					1	3
	//		 9		Remote controlled doors				2	0
	//		10		Remote controlled doors (slow)		2	1
	

	// Value2 == key type
	//	0	- normal
	//	1	- blue
	//	2	- yellow
	//	3	- red
	//	

	// Tag:
	//	  xx		- use switch <xx>						(1..32)
	//	 n--		- combine use <n>+1 consecutive switches
	//	m---		- combine mode
	//					0:	require all			(default)
	//					1:	require not all		(invert)
	//					2:	require none
	//					3:	require any
	//

	callback OnCreate {
		value3 = 80;
		if( value == 10 ) value3 = 15;

		value = value - 1;
		value2 = value & 3;		// key type
		value = value >> 2;		// door type

		//if( value4 )	// Fix tag to 0..31 range
		//	value4 -= 1;

		->Idle;
	}

	// pulse #:
	//	1	- player triggered
	//
	callback OnPulse {

			 if( value==2 ) { }		// switch-operated
		else if( value2==1 && statbar_key_0==0 ) sound $DSNOCARD2 256;
		else if( value2==2 && statbar_key_1==0 ) sound $DSNOCARD2 256;
		else if( value2==3 && statbar_key_2==0 ) sound $DSNOCARD2 256;
		else if( value==1 )
		{
			// Stay-open doors
			if( machine_position && machine_speed==0 )
				->StartOpen;
		}
		else
		{
			// Normal doors
			if( machine_speed > 0 )	->StartOpen;
			if( machine_speed < 0 )	->StartClose;
			if( machine_position ) ->StartOpen;
			->StartClose;
		}
	}

	func TryClose {
		distance = 64;
		if( check_blockers_radius() == 0 )
			->StartClose;
	}

	state StartClose {
		machine_speed = value3;
		if( value3 < 20 ) sound $DSPSTART2 256;
		else			  sound $DSPSTART 256;
		delay (0x4000-machine_position)/value3;
		sound $DSPSTOP 256;
		->Idle;
	}

	state StartOpen {
		machine_speed = 0 - value3;
		if( value3 < 20 ) sound $DSPSTART2 256;
		else			  sound $DSPSTART 256;
		delay machine_position/value3;
		sound $DSPSTOP 256;

		if( value==2 )
			->Idle;
		if( machine_speed<0 && value!=1 )
			->Waiting;
		->Idle;
	}

	state Idle {
		if( value==2 )
		{
			delay 150;
			if( tag_check(value4) )
			{
				// open
				if( machine_position && machine_speed >= 0 )
					->StartOpen;
			}
			else if( machine_position < 0x4000 && machine_speed <= 0 )
				TryClose;
		}
		else
			delay 10000;
	}

	state Waiting {
		if( value==1 ) ->Idle;
		delay 1000;
	
		vector_aim;
		vector_fastdist;
		if( distance > 192 )
			TryClose;
	}
}





actor Switch 0 {


	callback OnCreate {
		value3 = 0;				// internal state
		value &= 0x0FFF;		// Fix line action

		if( value4 )			// Fix tag to 0..31 range
		{
			if( value == 50 ) ->TextureAnimScrollTag;
			if( value == 51 ) ->TextureAnimRandomTag;
			value4 -= 1;
		}

		if( value == 50 ) ->TextureAnimScroll;
		if( value == 51 ) ->TextureAnimRandom;

		->Idle;
	}

	// pulse #:
	//	1	- player triggered
	//
	callback OnPulse {

		if( value && value <= 49 )		// if line is still active and is a switch
		{
			     if( value==24 && (switch_flags & (1 << value4))!=0 ) {}
			else if( value==25 && (switch_flags & (1 << value4))==0 ) {}
			else if( value==27 )
			{
				sound $DSPLIFT;
				player_apply_location_delta value4+1, value4+2;
			}
			else if( value==28 )
			{
				sound $DSPLIFT;
				player_apply_location_delta value4+2, value4+1;
			}
			else if( value==29 && statbar_key_0==0 ) sound $DSNOCARD2 256;
			else if( value==30 && statbar_key_1==0 ) sound $DSNOCARD2 256;
			else if( value==31 && statbar_key_2==0 ) sound $DSNOCARD2 256;
			else
			{
				value3 = 1 - value3;
				machine_line_scroll 32;
				sound $DSPSTOP 256;
				if( value==26 ) ->ExitLevel;

				switch_flags ^= 1 << value4;

				if( value==22 ) value = 0;		// One-time
			}
		}
	}

	state Idle {
		if( value>=23 && value<=25 ) ->FollowTag;
		if( value>=29 && value<=31 ) ->FollowTag;
		delay 30000;
	}
	
	state FollowTag {
		delay 150;
		
		if( value3 != ((switch_flags>>value4)&1) )
		{
			value3 = 1 - value3;
			machine_line_scroll 32;
		}
	}

	state ExitLevel {
		value = 0;
		delay 150;
		game_state = 2;		// end level
	}

	state TextureAnimScroll {
		delay 36;
		machine_line_scroll 2;
	}

	state TextureAnimRandom {
		delay 36;
		machine_line_scroll rand()<<1;
	}

	state TextureAnimScrollTag {
		if( tag_check(value4) )
		{
			delay 36;
			machine_line_scroll 2;
		}
		else
			delay 150;
	}

	state TextureAnimRandomTag {
		if( tag_check(value4) )
		{
			delay 36;
			machine_line_scroll rand()<<1;
		}
		else
			delay 150;
	}

}


actor LMP1DEBUG 65 #LMP1BL0 {
	callback OnCreate	{
		collision_set 8;
		frame #LMP1BL0;

		value2 = value2 >> 8;

		->FollowTag;
	}

	state FollowTag {
		delay 150;
		if( tag_check(value2) )
			frame #LMP1RE0;
		else
			frame #LMP1BL0;
	}

}
